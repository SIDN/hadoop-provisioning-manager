# start new hdfs cluster
# format the namenode and initialize HA

- name: (New HDFS cluster) Format namenode
  shell: >
      . {{ hadoop_etc_dir }}/hadoop-env.sh;
      {{ stack_root }}/hadoop-latest/bin/hdfs namenode -format -force {{ hadoop_fs_nameservices }}
  become_user: "{{ hadoop_os_user.hdfs }}"
  become: yes
  when: inventory_hostname in groups['hdfs_primary_nn']

- name: (New HDFS cluster) Initializing HA state in ZooKeeper
  shell: >
      . {{ hadoop_etc_dir }}/hadoop-env.sh;
      {{ stack_root }}/hadoop-latest/bin/hdfs zkfc -formatZK -force
  become_user: "{{ hadoop_os_user.hdfs }}"
  become: yes
  when: inventory_hostname in groups['hdfs_primary_nn']

- name: (New HDFS cluster) Start primary HDFS Namenode
  ansible.builtin.systemd:
      state: started
      daemon_reload: yes
      name: hdfs_namenode
  when: inventory_hostname in groups['hdfs_primary_nn']
  
# SNN steps below only
- name: (New HDFS cluster) Bootstrap secondary namenode
  shell: >
      . {{ hadoop_etc_dir }}/hadoop-env.sh;
      {{ stack_root }}/hadoop-latest/bin/hdfs namenode -bootstrapStandby -force -nonInteractive
  become_user: "{{ hadoop_os_user.hdfs }}"
  become: yes
  when: inventory_hostname in groups['hdfs_secondary_nn']

# create dirs, wait until snn has started
- name: (New HDFS cluster) Create HDFS root directories
  shell: >
      . {{ hadoop_etc_dir }}/hadoop-env.sh;
      kinit -kt {{ hadoop_etc_dir }}/hdfs.keytab hdfs/{{ inventory_hostname }}@{{ kerberos_realm }};
      {{ stack_root }}/hadoop-latest/bin/hdfs dfs -mkdir /user && hdfs dfs -chmod -R 775 /user;
      {{ stack_root }}/hadoop-latest/bin/hdfs dfs -mkdir /tmp && hdfs dfs -chmod -R 1777 /tmp;  
  become_user: "{{ hadoop_os_user.hdfs }}"
  become: yes
  when: inventory_hostname in groups['hdfs_secondary_nn']
  
# secondary NN can be started normal after NN -format and SNN -bootstrapStandby
# has been completed
- name: (New HDFS cluster) Start secondary name node
  ansible.builtin.systemd:
      state: started
      daemon_reload: yes
      name: hdfs_secondarynamenode
  when: inventory_hostname in groups['hdfs_secondary_nn']
