- name: Create OS group
  ansible.builtin.group:
    name: "{{ impala_os_group }}"
    state: present
  become: yes

- name: Include Create OS user
  include_role:
    name: create-system-user
  vars:
    new_user: "{{ impala_os_user }}"
    new_group: "{{ impala_os_group }}"

- name: Create configuration directory
  file:
    path: "{{ impala_etc_dir }}"
    state: directory
    mode: '0755'
  become: yes  
  
# - name: Check if the Apache Impala src is already downloaded
#   stat:
#     path: "{{ download_root }}/apache-impala-ubuntu-{{ version.impala }}.tar.gz"
#   register: stat_impala_src
#   delegate_to: localhost
#   connection: local
# 
# # cannot use impala >= 4.0.0 until this issue is fixed.
# # https://issues.apache.org/jira/browse/IMPALA-10756
# - name: Download Apache Impala
#   get_url:
#       url: "{{ item }}"
#       dest: "{{ download_root }}/{{ item | basename }}"
#   loop:
#     - "{{ repository_url }}/impala/apache-impala-ubuntu-{{ version.impala }}.tar.gz"
#   delegate_to: localhost
#   connection: local
#   when: not stat_impala_src.stat.exists

# - name: Check if the Apache Impala src is already on remote
#   stat:
#     path: "{{ cache_root }}/apache-impala-ubuntu-{{ version.impala }}.tar.gz"
#   register: stat_remote_impala_src

# - name: Copy Apache Impala to remote
#   ansible.builtin.copy:
#     src: "{{ download_root }}/apache-impala-ubuntu-{{ version.impala }}.tar.gz"
#     dest: "{{ cache_root }}"
#     mode: '0644'
#   when: not stat_remote_impala_src.stat.exists

# - name: Recursively remove Impala directory
#   ansible.builtin.file:
#     path: '{{ stack_root }}/apache-impala-ubuntu-{{ version.impala }}'
#     state: absent
#   become: yes
  
- name: Create Impala component directory
  file:
    path: "{{ stack_root }}/apache-impala-ubuntu-{{ version.impala }}/bin"
    state: directory
    owner: "{{ impala_os_user }}"
    group: "{{ impala_os_group }}"
    mode: '0755'
  become: yes  

# - name: Extract Impala 
#   ansible.builtin.unarchive:
#       src: "{{ cache_root }}/apache-impala-ubuntu-{{ version.impala }}.tar.gz"
#       remote_src: true
#       creates: "{{ stack_root }}/apache-impala-ubuntu-{{ version.impala }}"
#       dest: "{{ stack_root }}"
#       owner: "{{ impala_os_user }}"
#       group: "{{ impala_os_group }}"
#   become: yes

- name: Create symlink latest Impala version
  file:
      src: "{{ stack_root }}/apache-impala-ubuntu-{{ version.impala }}"
      dest: "{{ stack_root }}/apache-impala-latest"
      state: link
  become: yes

# somehow /usr/lib/x86_64-linux-gnu/libsasl2.so.3 is not available
# on Ubunut. And impala-shell will crash without it.
# Creating symlink to libsasl2.so.2 fixes the problem
# - name: Fix missing SASL so file (Ubuntu)
#   file:
#       src: /usr/lib/x86_64-linux-gnu/libsasl2.so.2
#       dest: /usr/lib/x86_64-linux-gnu/libsasl2.so.3
#       state: link
#   become: yes
#   when: ansible_distribution == "Ubuntu"

# - name: Create venv base directory
#   file:
#     path: '{{ python_venv_dir }}'
#     state: directory
#   become: yes
    
# impala-shell < 4.2.0 only works with py2, create venv for impala-shell
# all users in group ranger_sync_group_name (hadoop_users) must have access to the venv    
# - name: Create py env config facts
#   set_fact:
#      py_version: 2
#      py_env_name: py2-impala-shell
#      py_env_permission: 'root:{{ ranger_sync_group_name }}'
#   when: version.impala is version('4.2.0', '<')
# 
# - name: Include role for Python create venv
#   include_role:
#     name: python-venv
#   when: version.impala is version('4.2.0', '<')
  