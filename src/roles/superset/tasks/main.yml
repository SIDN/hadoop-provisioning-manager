- name: Create OS group
  ansible.builtin.group:
    name: "{{ superset_os_group }}"
    state: present
  become: yes
  
- name: Include Create OS user
  include_role:
    name: create-system-user
  vars:
    new_user: "{{ superset_os_user }}"
    new_group: "{{ superset_os_group }}"
    
- name: Add  user superset user to group docker
  user:
    name: '{{ superset_os_user }}'
    groups: docker
    append: yes
  become: yes
    
- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ superset_os_user }}"
    group: "{{ superset_os_group }}"
  loop:
    - '{{ superset_etc_dir }}'
    - '{{ superset_log_dir }}'
    - '{{ stack_root }}/apache-superset-{{ version.superset }}/bin'
  become: yes

- name: Check if secret key is already created
  stat:
    path: "{{ superset_etc_dir }}/secret_key"
  register: stat_secret_key
  
# create secret key only 1 time duing install, cannot change the key otherwise 
# db connections are nog longer usable
- name: Create secret key
  shell: |
      openssl rand -base64 42 > {{ superset_etc_dir }}/secret_key
      chown {{ superset_os_user }}:{{ superset_os_group }} {{ superset_etc_dir }}/secret_key
  when: not stat_secret_key.stat.exists
  become: yes

- name: Install package dependencies
  ansible.builtin.package:
    name:
      - docker-compose
    state: latest
  become: yes
    
- name: Create Keberos KT renewer script
  ansible.builtin.template:
    src: 'templates/superset-kt-renewer.sh.j2'
    dest: '{{ stack_root }}/apache-superset-{{ version.superset }}/bin/superset-kt-renewer.sh'
    mode: '0755'
  become: yes
  
- name: Create Systemd units and timer
  ansible.builtin.template:
    src: ../templates/{{ item }}
    dest: /etc/systemd/system/{{ item | replace('.j2','') }}
  loop:
    - superset-kt-renewer.service.j2
    - superset-kt-renewer.timer.j2
    - superset.service.j2
  become: yes
  
- name: Systemctl Reload Daemons
  shell: systemctl daemon-reload
  become: yes
  
- name: Check if dhparam.pem is already created
  stat:
    path: "{{ superset_etc_dir }}/nginx_dhparam.pem"
  register: stat_nginx_dhparam
  
- name: Create dhparam.pem for Nginx proxy
  shell: >
    openssl dhparam -out {{ superset_etc_dir }}/nginx_dhparam.pem 2048
  become: yes  
  when: not stat_nginx_dhparam.stat.exists
  
- name: Recursively change ownership superset directory
  ansible.builtin.file:
    path: '{{ stack_root }}/apache-superset-{{ version.superset }}'
    state: directory
    recurse: yes
    owner: "{{ superset_os_user }}"
    group: "{{ superset_os_group }}"
  become: yes

- name: Create symlink to latest version
  file:
      src: '{{ stack_root }}/apache-superset-{{ version.superset }}'
      dest: '{{ stack_root }}/apache-superset-latest'
      state: link
  become: yes
        
- name: Include create database
  include_tasks: tasks/database.yml
  
- name: Include build docker image 
  include_tasks: tasks/docker-build.yml
  

