# Update the ss repo
- name: Check for Git repo
  ansible.builtin.stat:
    path: '{{ download_root }}/superset'
  register: git_repo
  become: yes
  
- name: Fech Git repository
  shell: git clone {{ superset_download_url }} {{ download_root }}/superset
  become: yes
  when: not git_repo.stat.exists

# build docker image with kerberos support
- name: Check if Superset docker image already exists
  shell: "docker images | grep {{ groups['manager'][0] }}:{{ docker_registry_port }}/apache/superset.*{{ version.superset }} | wc -l"
  register: docker_img_exists
  delegate_to: localhost
  connection: local
  become: yes
  
- name: Show Superset docker image already exists
  ansible.builtin.debug:
    msg: Superset image detect {{ docker_img_exists.stdout }}
  delegate_to: localhost
  connection: local
  become: yes
  
# add kerberos packages to Dockerfile
- name: Add additional packages to Dockerfile
  ansible.builtin.lineinfile:
    path: '{{ download_root }}/superset/Dockerfile'
    search_string: 'libpq-dev'
    line: 'libpq krb5-user vim \\'  
  delegate_to: localhost
  connection: local
  when: docker_img_exists.stdout | int == 0

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: '../templates/requirements-local.txt'
    dest: '{{ download_root }}/superset/docker/requirements-local.txt'
  delegate_to: localhost
  connection: local
  when: docker_img_exists.stdout | int == 0

- name: Create Superset image on controller server
  shell: >
    cd {{ download_root }}/superset;
    git checkout {{ version.superset }};
    TAG={{ version.superset }} docker build .
  delegate_to: localhost
  connection: local
  become: yes
  when: docker_img_exists.stdout | int == 0
  
- name: Tag Superset docker image
  shell: >
    docker image tag apache/superset:{{ version.superset }} {{ groups['manager'][0] }}:{{ docker_registry_port }}/apache/superset:{{ version.superset }}
  delegate_to: localhost
  connection: local
  become: yes
  when: docker_img_exists.stdout | int == 0

# deploy img to server  
- name: Push Superset docker image to registry
  shell: >
    docker push {{ groups['manager'][0] }}:{{ docker_registry_port }}/apache/superset:{{ version.superset }}
  delegate_to: localhost
  connection: local
  become: yes
  when: docker_img_exists.stdout | int == 0

- name: Pull Superset image to Superset server
  shell: >
    docker pull {{ groups['manager'][0] }}:{{ docker_registry_port }}/apache/superset:{{ version.superset }}
  become: yes