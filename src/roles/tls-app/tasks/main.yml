- name: Generate jks script
  ansible.builtin.template:
    src: ../templates/create-jks.sh.j2
    dest: "{{ tls_etc_dir }}/create-jks.sh"
    mode: '0755'
  loop:
    - { src: 'create-jks.sh.j2', dest: '{{ tls_etc_dir }}'}
  become: yes

# create jks truststore, used by hdfs namenode (ssl-server.xml)
- name: Run JKS script
  shell: "{{ tls_etc_dir }}/create-jks.sh"
  become: yes


# create tls pem for impala haproxy    
# - name: Create haproxy TLS PEM
#   shell: >
#     cd {{ tls_etc_dir }};
#     cat {{ tls_remote_pub_key }} {{ tls_remote_priv_key }} > haproxy_tls_pub_chain.pem 
#   become: yes
#   when: inventory_hostname in groups['impala_ha_proxy']
  
- name: Install Haproxy TLS
  include_tasks: ranger.yml
  become: yes
  when: inventory_hostname in groups['impala_ha_proxy']
        
- name: Install Ranger Admin TLS
  include_tasks: ranger-admin.yml
  become: yes
  when: inventory_hostname in groups['ranger']
  
#  ranger admin needs truststore with alias rangeradmin    
# - hosts: ranger
#   vars_files:
#     - "{{ prov_cfg_dir }}/vars/all.yml"
#     - "{{ prov_cfg_dir }}/vars/vault_password_vars.yml"
#     - "{{ prov_cfg_dir }}/vars/tls_vars.yml"
#   remote_user: hadoop-mgr
#   become: yes
#   tasks:  
#     - name: Remove old truststore
#       ansible.builtin.file:
#         path: "{{ tls_etc_dir }}/ranger-tls.jks"
#         state: absent
# 
#     - name: Copy keystore
#       ansible.builtin.copy:
#         src: "{{ tls_etc_dir }}/{{ tls_remote_truststore }}"
#         dest: "{{ tls_etc_dir }}/ranger-tls.jks"
#         remote_src: yes
# 
#     - name: Update truststore with correct alias
#       shell: >
#         keytool 
#         -changealias 
#         -alias 1 
#         -destalias rangeradmin 
#         -v 
#         -keystore {{ tls_etc_dir }}/ranger-tls.jks
#         -storepass {{ tls_remote_truststore_password }}
# 
  
  
- name: Install Ranger Plugin TLS
  include_tasks: ranger-plugin.yml
  become: yes
  when: (inventory_hostname in groups['impala']) 
    or (inventory_hostname in groups['impala_catalog']) 
    or (inventory_hostname in groups['hadoop']) 
    or (inventory_hostname in groups['hdfs_primary_nn']) 
    or (inventory_hostname in groups['hdfs_secondary_nn']) 
  
# impala ranger plugin needs keystore with alias sslKeyStore
# and trusstore with alias sslTrustStore
# otherwise impala ranger plugin cannot connect to ranger
# the trusstore with alias sslTrustStore are also used by the
# hadoop namenode
# - hosts: impala:impala_catalog:hadoop:hdfs_primary_nn:hdfs_secondary_nn
#   vars_files:
#     - "{{ prov_cfg_dir }}/vars/all.yml"
#     - "{{ prov_cfg_dir }}/vars/vault_password_vars.yml"
#     - "{{ prov_cfg_dir }}/vars/tls_vars.yml"
#     - "{{ prov_cfg_dir }}/vars/hadoop_vars.yml"
#   remote_user: hadoop-mgr
#   become: yes
#   tasks:
#     - name: Delete old data
#       ansible.builtin.file:
#         path: "{{ item }}"
#         state: absent
#       with_items:
#         - "{{ tls_etc_dir }}/ranger-keystore.jks"
#         - "{{ tls_etc_dir }}/ranger-truststore.jks"
#         - "{{ tls_etc_dir }}/ranger-truststore.jcek"
#         - "{{ tls_etc_dir }}/ranger-keystore.jcek"
# 
#     - name: Create ranger keystore
#       copy:
#         src: "{{ tls_etc_dir }}/{{ tls_remote_truststore }}"
#         dest: "{{ tls_etc_dir }}/ranger-keystore.jks"
#         remote_src: yes
# 
#     - name: Create ranger truststore
#       copy:
#         src: "{{ tls_etc_dir }}/{{ tls_remote_truststore }}"
#         dest: "{{ tls_etc_dir }}/ranger-truststore.jks"
#         remote_src: yes
# 
#     - name: Change keystore alias to sslKeyStore
#       shell: >
#         keytool 
#         -changealias -alias 1 
#         -destalias sslKeyStore 
#         -v 
#         -keystore {{ tls_etc_dir }}/ranger-keystore.jks
#         -storepass {{ tls_remote_truststore_password }}
# 
#     - name: Change truststore alias to sslTrustStore
#       shell: >
#         keytool 
#         -changealias -alias 1 
#         -destalias sslTrustStore 
#         -v 
#         -keystore {{ tls_etc_dir }}/ranger-truststore.jks
#         -storepass {{ tls_remote_truststore_password }}
# 
#     - name: Create truststore jcek
#       shell: >
#         . {{ hadoop_etc_dir }}/hadoop-env.sh;
#         hadoop credential create sslTrustStore 
#         -value {{ tls_remote_truststore_password }} 
#         -provider localjceks://file{{ tls_etc_dir }}/ranger-truststore.jcek
# 
#     - name: Create keystore jcek
#       shell: >
#         . {{ hadoop_etc_dir }}/hadoop-env.sh;
#         hadoop credential create sslKeyStore 
#         -value {{ tls_remote_truststore_password }}
#         -provider localjceks://file{{ tls_etc_dir }}/ranger-keystore.jcek
# 
#     - name: Change file permissions
#       ansible.builtin.file:
#         path: "{{ item }}"
#         mode: '0644'  
#       with_items:
#         - "{{ tls_etc_dir }}/ranger-keystore.jcek"
#         - "{{ tls_etc_dir }}/ranger-truststore.jcek"
#         - "{{ tls_etc_dir }}/ranger-keystore.jks"
#         - "{{ tls_etc_dir }}/ranger-truststore.jks"
# 

- name: Install Monitor TLS
  include_tasks: monitor.yml
  become: yes
  when: inventory_hostname in groups['monitor']
  
# 
# - hosts: monitor
#   vars_files:
#     - "{{ prov_cfg_dir }}/vars/all.yml"
#     - "{{ prov_cfg_dir }}/vars/vault_password_vars.yml"
#     - "{{ prov_cfg_dir }}/vars/tls_vars.yml"
#   remote_user: hadoop-mgr
#   become: yes
#   tasks:  
#     - name: Remove old truststore
#       ansible.builtin.file:
#         path: "{{ item }}"
#         state: absent
#       loop:
#         - "{{ tls_etc_dir }}/ssl.crt"
#         - "{{ tls_etc_dir }}/ssl.key"
# 
#     - name: Copy keystore
#       ansible.builtin.copy:
#         src: "{{ tls_etc_dir }}/{{ item.src }}"
#         dest: "{{ tls_etc_dir }}/{{ item.dest }}"
#         remote_src: yes
#       loop:
#         - { src: '{{ tls_remote_pub_chain }}', dest: 'ssl.crt' }
#         - { src: '{{ tls_remote_priv_key }}', dest: 'ssl.key' }
# 
#     - name: Create dhparam (this may take some time)
#       shell: >
#         openssl dhparam -out {{ tls_etc_dir }}/dhparam.pem 2048