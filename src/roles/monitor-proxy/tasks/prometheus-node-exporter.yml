# make sure htpasswd utility is installed for creating encrypted passwords
- name: install required packages (RHEL)
  ansible.builtin.package:
    name:
      - httpd-tools
    state: latest
  become: yes
  when: ansible_distribution == 'RedHat'
    
- name: install required packages (Ubuntu)
  ansible.builtin.package:
    name:
      - apache2-utils
    state: latest
  become: yes
  when: ansible_distribution == 'Ubuntu'
  
- name: Check if the Prometheus Node Exporter src is already downloaded
  stat:
    path: "{{ download_root }}/{{ prometheus_node_exporter_url | basename }}"
  register: exporter_downloaded
  delegate_to: localhost
  connection: local
    
- name: Download Prometheus Node Exporter
  get_url:
      url: "{{ prometheus_node_exporter_url }}"
      dest: "{{ download_root }}/{{ prometheus_node_exporter_url | basename }}"
  delegate_to: localhost
  connection: local
  when: not exporter_downloaded.stat.exists

- name: Check if the Prometheus Node Exporter src is already on remote
  stat:
    path: "{{ cache_root }}/{{ prometheus_node_exporter_url | basename }}"
  register: remote_exporter_downloaded

- name: Copy Prometheus Node Exporter to remote
  ansible.builtin.copy:
    src: "{{ download_root }}/{{ prometheus_node_exporter_url | basename }}"
    dest: "{{ cache_root }}"
  when: not remote_exporter_downloaded.stat.exists
  
- name: Extract Prometheus Node Exporter
  ansible.builtin.unarchive:
      src: "{{ cache_root }}/{{ prometheus_node_exporter_url | basename }}"
      remote_src: true
      dest: "{{ stack_root }}"
      creates: "{{ stack_root }}/node_exporter-{{ version.prometheus_node_exporter }}.linux-amd64"
  become: yes
  
# extract somehow does not set the correct owner and permission
# now set permissions and ownerships
- name: Recursively change ownership of Prometheus Node Exporter directory
  ansible.builtin.file:
    path: "{{ stack_root }}/node_exporter-{{ version.prometheus_node_exporter }}.linux-amd64"
    state: directory
    recurse: yes
    owner: root
    group: root
  become: yes

- name: Create symlink latest Prometheus Node Exporter version
  file:
      src: "{{ stack_root }}/node_exporter-{{ version.prometheus_node_exporter }}.linux-amd64"
      dest: "{{ stack_root }}/prometheus-node-exporter-latest"
      state: link
  become: yes

- name: Create Prometheus Node Exporter systemd unit
  ansible.builtin.template:
    src: ../templates/systemd_prometheus_node_exporter_service.j2
    dest: /etc/systemd/system/prometheus_node_exporter.service
    mode: '0644'
  become: yes
  
# make sure monitoring restarts after reboot
- name: Enable Prometheus Node Exporter systemd service
  ansible.builtin.systemd:
    name: prometheus_node_exporter
    enabled: yes
  become: yes
  
- name: remove error
  file:
      src: /usr/local/hadoop/pprometheus-port-monitor.sh
      state: absent
  become: yes
  
- name: Create Impala service Port monitor script
  ansible.builtin.template:
    src: "../templates/prometheus-port-monitor.sh.j2"
    dest: "{{ stack_root }}/prometheus-node-exporter-latest/prometheus-port-monitor.sh"
    mode: '0775'
  become: yes
  when: (inventory_hostname in groups['impala_statestore'])
         or (inventory_hostname in groups['impala_catalog'])
         or (inventory_hostname in groups['impala'])