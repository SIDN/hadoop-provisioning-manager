FROM ubuntu:22.04

USER root

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update \
 && apt-get install -yq --no-install-recommends \
    build-essential \
    ca-certificates \
    locales \
    python3-dev \
    python3-pip \
    python3-pycurl \
    nodejs \
    npm \
    libkrb5-dev \
    krb5-user \
    openjdk-8-jdk \
    vim \
    inetutils-telnet \
    iputils-ping \
    g++ libsasl2-dev libsasl2-2 libsasl2-modules-gssapi-mit \
    git \
    texlive-xetex texlive-fonts-recommended texlive-plain-generic pandoc \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/

ENV SHELL=/bin/bash \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8

RUN locale-gen $LC_ALL

# always make sure pip is up to date!
RUN python3 -m pip install --no-cache --upgrade setuptools pip

RUN npm install -g configurable-http-proxy \
 && rm -rf ~/.npm

# Install python libs
COPY requirements.txt /
RUN pip3 install -r requirements.txt

RUN mkdir /examples
COPY *.ipynb /examples/

# patch problems in libs
# 
# fix problem with jupyterhub-kerberosauthenticator login
# see: https://github.com/jupyterhub/kerberosauthenticator/issues/12
RUN sed -i "s/login_url=self.settings\['login_url'\]/login_url=self.settings\['login_url'\],sync=True/" /usr/local/lib/python3.10/dist-packages/kerberosauthenticator/auth.py
RUN sed -i "s/jinja2_env/jinja2_env_sync/" /usr/local/lib/python3.10/dist-packages/kerberosauthenticator/auth.py

# fix problem with thrift check for open ssl connection
# just assume the ssl conn is open when an ssl object is present
# this fix can be removed then the pull request below is released in new thrift version
# see: https://github.com/apache/thrift/pull/2620
RUN sed -i "s/def isOpen(self):/def isOpen(self):\\n        return self.handle is not None/" /usr/local/lib/python3.10/dist-packages/thrift/transport/TSocket.py

# set pyspark envs
ENV HADOOP_CONF_DIR={{ hadoop_etc_dir }}
ENV YARN_CONF_DIR={{ hadoop_etc_dir }}
ENV SPARK_CONF_DIR={{ spark_etc_dir }}

# install user required python packages
COPY jupyterhub-user-requirements.txt /
RUN pip3 install -r jupyterhub-user-requirements.txt

EXPOSE 8000

COPY entrypoint.sh /

ENTRYPOINT ["sh","/entrypoint.sh"]
#CMD ["jupyterhub", "-f", "{{ jupyterhub_etc_dir }}/jupyterhub_config.py"]
