- name: Check if Jupyterhub docker image already exists
  docker_image_info:
    name: "{{ groups['manager'][0] }}:{{ docker_registry_port }}/jupyterhub:{{ version.jupyterhub }}"
  register: docker_img_exists
  delegate_to: localhost
  connection: local
  become: yes

- name: Show Jupyterhub docker image already exists
  ansible.builtin.debug:
    msg: "Jupyterhub image detect: {{ docker_img_exists.images | length == 1 }}"
  delegate_to: localhost
  connection: local
  become: yes

- name: Create docker build directory
  file:
    path: "{{ cache_root }}/jupyterhub"
    state: directory
  delegate_to: localhost
  connection: local
  
- name: Create Dockerfile
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ cache_root }}/jupyterhub/{{ item | basename | replace('.j2','') }}"
    mode: '0644'
  loop:
    - ../templates/Dockerfile.j2
    - ../templates/entrypoint.sh.j2
    - ../templates/requirements.txt.j2
    - ../templates/examples/impyla-example.ipynb.j2
    - ../templates/examples/pyspark-example.ipynb.j2
    - "{{ prov_cfg_dir }}/python/jupyterhub-user-requirements.txt"
  delegate_to: localhost
  connection: local

- name: Create Jupyterhub image on controller server
  community.docker.docker_image:
    build:
      path: "{{ cache_root }}/jupyterhub"
    name: "{{ groups['manager'][0] }}:{{ docker_registry_port }}/jupyterhub"
    tag: "{{ version.jupyterhub }}"
    push: yes
    source: build
    force_source: yes
  delegate_to: localhost
  connection: local
  become: yes
  when: docker_img_exists.images | length == 0
  
- name: Pull Jupyterhub image to Jupyterhub server
  shell: >
    docker login -u {{ docker_registry_user }} -p {{ docker_registry_password }} {{ groups['manager'][0] }}:{{ docker_registry_port }};
    docker pull {{ groups['manager'][0] }}:{{ docker_registry_port }}/jupyterhub:{{ version.jupyterhub }};
    docker system prune -f
  become: yes

