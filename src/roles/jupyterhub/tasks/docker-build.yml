- name: Check if Jupyterhub docker image already exists
  shell: "docker images | grep {{ groups['manager'][0] }}:{{ docker_registry_port }}/jupyterhub.*latest | wc -l"
  register: docker_img_exists
  delegate_to: localhost
  connection: local
  become: yes
  
- name: Show Jupyterhub docker image already exists
  ansible.builtin.debug:
    msg: Jupyterhub image detect {{ docker_img_exists.stdout }}
  delegate_to: localhost
  connection: local
  become: yes
  
- name: Determine Ubuntu Java version (Ubuntu)
  set_fact:
      ubuntu_java_version: "{{ version.java.split('.')[1] }}"

- name: Create docker build directory
  file:
    path: "{{ cache_root }}/jupyterhub"
    state: directory
  delegate_to: localhost
  connection: local
  
- name: Create Dockerfile
  ansible.builtin.template:
    src: ../templates/{{ item }}
    dest: "{{ cache_root }}/jupyterhub/{{ item | replace('.j2','') }}"
    mode: '0644'
  loop:
    - Dockerfile.j2
    - requirements.txt.j2
    - impyla-example.ipynb.j2
    - pyspark-example.ipynb.j2
  delegate_to: localhost
  connection: local

- name: Create Jupyterhub image on controller server
  community.docker.docker_image:
    build:
      path: "{{ cache_root }}/jupyterhub"
    name: "{{ groups['manager'][0] }}:{{ docker_registry_port }}/jupyterhub"
    tag: latest
    push: yes
    source: build
    force_source: yes
  delegate_to: localhost
  connection: local
  become: yes
  #when: docker_img_exists.stdout | int == 0
  
- name: Deploy image to Jupyterhub server  
  community.docker.docker_image:
    name: "{{ groups['manager'][0] }}:{{ docker_registry_port }}/jupyterhub:latest"
    source: pull
    force_source: yes

