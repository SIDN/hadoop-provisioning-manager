- hosts: hdfs_journalnode
  remote_user: hadoop-mgr
  become: yes
  vars:
    service_name: hdfs_journalnode
  tasks:  
    - name: "Start service(s)"
      include_tasks: startup/tasks/generic-service.yml

# start primary hdfs namenode before secondary      
- hosts: hdfs_primary_nn
  remote_user: hadoop-mgr
  vars_files:
    - "{{ prov_cfg_dir }}/vars/all.yml"
    - "{{ prov_cfg_dir }}/vars/hadoop_vars.yml"
    - "{{ prov_cfg_dir }}/vars/kerberos_vars.yml"
    - "{{ prov_cfg_dir }}/vars/zookeeper_vars.yml"
  become: yes
  tasks:
    - name: "Start Primary namenode"
      include_tasks: startup/tasks/hdfs_nn.yml
      
# secondary namenode       
- hosts: hdfs_secondary_nn
  remote_user: hadoop-mgr
  vars_files:
    - "{{ prov_cfg_dir }}/vars/all.yml"
    - "{{ prov_cfg_dir }}/vars/hadoop_vars.yml"
    - "{{ prov_cfg_dir }}/vars/kerberos_vars.yml"
    - "{{ prov_cfg_dir }}/vars/zookeeper_vars.yml"
  become: yes
  tasks:
    - name: "Start Standby namenode"
      include_tasks: startup/tasks/hdfs_nn.yml
      
- hosts: hadoop
  remote_user: hadoop-mgr
  become: yes
  vars:
    service_name: hdfs_datanode
  tasks:
    - name: "Start service(s)"
      include_tasks: startup/tasks/generic-service.yml

- hosts: hdfs_httpfs
  remote_user: hadoop-mgr
  become: yes
  vars:
    service_name: hdfs_httpfs
  tasks:
    - name: "Start service(s)"
      include_tasks: startup/tasks/generic-service.yml      

# set datanode cpu resource limits
- hosts: hadoop
  remote_user: hadoop-mgr
  vars_files:
    - "{{ prov_cfg_dir }}/vars/all.yml"
    - "{{ prov_cfg_dir }}/vars/hadoop_vars.yml"
  become: yes     
  tasks:   
    - name: Set HDFS datanode cgroup cpu-shares
      shell: >
          systemctl set-property hdfs_datanode.service CPUShares={{ hadoop_cgroups.cpu_shares.hdfs_datanode }}
      when: ('hadoop' in groups and inventory_hostname in groups['hadoop'])
