
- hosts: all
  vars_files:
    - "{{ prov_cfg_dir }}/vars/all.yml"
  remote_user: hadoop-mgr
  tasks:
    - name: Stop Service
      ansible.builtin.systemd: 
        name: "{{ item }}"
        state: stopped
      become: yes
      ignore_errors: yes
      loop:
        - docker
    
- hosts: all
  vars_files:
    - "{{ prov_cfg_dir }}/vars/all.yml"
    - "{{ prov_cfg_dir }}/vars/hadoop_vars.yml"
    - "{{ prov_cfg_dir }}/vars/impala_vars.yml"
  remote_user: hadoop-mgr
  tasks:

    - name: Delete directories
      vars:
         dirs:
           - "{{ download_root }}"
           - "{{ config_root }}"
           - "{{ cache_root }}"
           - "{{ stack_root }}"
           - "{{ hadoop_dfs_datanode_data_dir }}"
           - "{{ hadoop_dfs_namenode_name_dir }}"
           - "{{ hadoop_dfs_namenode_checkpoint_dir }}"
           - "{{ hadoop_dfs_journalnode_edits_dir }}"
           - "{{ yarn_node_manager_logdir }}"
           - "{{ impalad_scratch_dirs }}"
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop: "{{ dirs | flatten }}"
      become: yes
    
# destroy db manually
# sudo apt-get --purge remove postgresql-*
# sudo rm -Rf /etc/postgresql /var/lib/postgresql
# sudo rm -rf {{ db_data_dir }}
- hosts: database
  vars_files:
    - "{{ prov_cfg_dir }}/vars/all.yml"
    - "{{ prov_cfg_dir }}/vars/db_vars.yml"
  remote_user: hadoop-mgr
  tasks:
    - name: Stop Postgresql (RHEL)
      ansible.builtin.systemd: 
        name: postgresql-{{ version.postgresql }}
        state: stopped
      when: ansible_distribution == "RedHat"
            and not db_use_existing
      
    - name: Stop Postgresql (Ubuntu)
      ansible.builtin.systemd: 
        name: postgresql
        state: stopped
      when: ansible_distribution == "Ubuntu"
            and not db_use_existing
      
    - name: Remove required DB packages (RHEL)
      ansible.builtin.package:
        name:
          - postgresql{{ version.postgresql }}-server
          - postgresql{{ version.postgresql }}-libs
          - postgresql{{ version.postgresql }}
          - postgresql-jdbc
          - python-psycopg2
          - python3-psycopg2
        state: absent
      become: yes
      when: ansible_distribution == "RedHat"
            and not db_use_existing
      
    - name: Remove required DB packages (Ubuntu)
      ansible.builtin.package:
        name:
          - postgresql-{{ version.postgresql }}
          - postgresql-contrib
          - libpq-dev
          - postgresql-server-dev-{{ version.postgresql }}
          - libpostgresql-jdbc-java
          - python3-psycopg2
        state: absent
      become: yes
      when: ansible_distribution == "Ubuntu"
            and not db_use_existing
            

    - name: Delete psql data directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop: 
        - "{{ db_data_dir }}"
      become: yes
      when: not db_use_existing
    

- hosts: kerberos_kdc
  vars_files:
    - "{{ prov_cfg_dir }}/vars/all.yml"
    - "{{ prov_cfg_dir }}/vars/kerberos_vars.yml"
  remote_user: hadoop-mgr
  tasks:
    - name: Determine OS specific config (RHEL)
      set_fact:
         fact_kdc_cfg_dir: /var/kerberos/krb5kdc
         fact_kdc_db_dir: /var/kerberos/krb5kdc
         fact_kdc_service_name: krb5kdc
         fact_admin_service_name: kadmin
      when: ansible_distribution == 'RedHat'
         
    - name: Determine OS specific config (Ubuntu)
      set_fact:
         fact_kdc_cfg_dir: /etc/krb5kdc
         fact_kdc_db_dir: /var/lib/krb5kdc
         fact_kdc_service_name: krb5-kdc
         fact_admin_service_name: krb5-admin-server
      when: ansible_distribution == 'Ubuntu'
      
    - name: Stop Kerberos services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      loop:
        - '{{ fact_kdc_service_name }}'
        - '{{ fact_admin_service_name }}'
      become: yes

    - name: Remove Kerberos packages (RHEL)
      ansible.builtin.package:
        name:
          - krb5-server
          - krb5-libs
          - krb5-workstation
        state: absent
      become: yes
      when: ansible_distribution == 'RedHat'
      
    - name: Remove Kerberos packages (Ubuntu)
      ansible.builtin.package:
        name:
          - krb5-kdc
          - krb5-admin-server
          - krb5-config
        state: absent
      become: yes
      when: ansible_distribution == 'Ubuntu'
      
    - name: Delete directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop: 
        - "{{ fact_kdc_cfg_dir }}"
        - "{{ fact_kdc_db_dir }}"
      become: yes
      
